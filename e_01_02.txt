実施テキスト：達人に学ぶDB設計徹底指南書

実施者：玉利仁美
実施日：10月25日

[演習1－2] アプリケーション改修のタイプとコスト

[演習内容]
  12ページの「設計工程と開発モデル」において、開発モデルの主流であるウォーターフォールモデルでは、後半の工程に入ってからの手戻りが難しく、改修が高コストになりがちだ、と説明しました。
  今、皆さんが参加しているシステム開発のプロジェクトがテスト工程に差し掛かっているとします。すでにプロジェクトも佳境、カットオーバーも近づいてきています。そんな中、テストでシステムに次のような問題が発見されました。
  
  問題①
    性能試験において、ある夜間バッチ処理のSQLの性能が非常に悪く、要件上は1時間で終了するべきSQLが10時間かかることが分かった。
  問題②
    画面からオンラインで出力する帳票において、現在のレイアウトでは情報が不足していることが分かった。顧客との要件調整に漏れがあったことが原因だった。
    
  上記の問題に対して、実装及び設計に対してどのような変更によって解決が可能か、思いつくだけの方法を提案してください。もっとも、まだデータベース設計について詳細を学んでいない現段階では、具体的な手法にまで落とし込むことは難しいでしょう。ここでは、おおざっぱな方針を考えてもらうだけで構いません。そして、少なくとも第6章まで終えた後に、再度この演習問題に取り組んでみてください。


回答

問題①案
  夜間バッチに関わる機能を要件に差支えのない範囲で削る
  バッチそれぞれの所有データを制限する
  SQL文そのものを修正する
  
問題②案
  要件に合うよう設計書の見直しをおこなう、それに伴い対象機能の実装も修正する

単語：
・カットオーバー：プロジェクトの完了であり、システム利用の開始のこと。
・バッチ処理：一括処理。ある期間に集められたデータなどを一括で処理すること

 